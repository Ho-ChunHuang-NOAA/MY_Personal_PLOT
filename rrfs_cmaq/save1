        plt.figure(figsize=(12, 6))
        for i in range(0,ilen):
            if int(iplot[i]) == 1: 
                ## print("plot "+title[i])
                figarea=reg[i]
                extent = [ rlon0[i], rlon1[i], rlat0[i], rlat1[i] ]
                clon=0.5*(rlon0[i]+rlon1[i])
                clat=0.5*(rlat0[i]+rlat1[i])
                ## ax = plt.axes(projection=ccrs.LambertConformal(central_longitude=-120.628, central_latitude=21.821, false_easting=-58.775, false_northing=48.772, standard_parallels=(33, 45), globe=None))
                if figarea == "ak":
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, false_easting=-58.775, false_northing=48.772, standard_parallels=(57, 63), globe=None)
                elif figarea == "hi":
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, standard_parallels=(19, 21), globe=None)
                else:
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, standard_parallels=(33, 45), globe=None)
                ax = plt.axes(projection=aqmproj)
                ## ax = plt.axes(projection=ccrs.PlateCarree())
                ax.set_extent(extent)
                states_provinces = cfeature.NaturalEarthFeature(
                    category='cultural',
                    name='admin_1_states_provinces_lines',
                    scale='50m',
                    facecolor='none')
                rivers_50m = cfeature.NaturalEarthFeature('physical', 'rivers_lake_centerlines', '50m')
                ax.add_feature(states_provinces, edgecolor='gray')
                ## ax.coastlines('50m')
                ax.add_feature(cfeature.BORDERS, linestyle=':')
                ax.add_feature(cfeature.OCEAN)
                ax.add_feature(cfeature.LAND, edgecolor='black')
                ax.add_feature(cfeature.LAKES, edgecolor='black')
                ## ax.set_title(label_date.strftime(YMD_date_format)+" EPA AQS O3 Obs")
                ax.set_title(label_date.strftime(YMD_date_format)+" "+label_date.strftime(H_date_format)+"Z EPA AQS O3 (ppb) Obs")
                ## ax.add_feature(rivers_50m, facecolor='None', edgecolor='b')
                ## ax.add_feature(cfeature.RIVERS)
                ## plt.show()
                for x in range(0,num_o3):
                  ax.plot(o3lon[x], o3lat[x], 'o', markersize=3, transform=ccrs.PlateCarree())
                ##ax.text(-117, 33, 'San Diego', transform=ccrs.Geodetic())
                fileout=figout+"/epaaqs_o3."+figarea+"."+label_date.strftime(YMD_date_format)+"."+label_date.strftime(H_date_format)+".k1.png"
                plt.savefig(fileout, bbox_inches='tight') 
                if figarea == "ak":
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, false_easting=-58.775, false_northing=48.772, standard_parallels=(57, 63), globe=None)
                elif figarea == "hi":
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, standard_parallels=(19, 21), globe=None)
                else:
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, standard_parallels=(33, 45), globe=None)
                ax = plt.axes(projection=aqmproj)
                ax.set_extent(extent)
                states_provinces = cfeature.NaturalEarthFeature(
                    category='cultural',
                    name='admin_1_states_provinces_lines',
                    scale='50m',
                    facecolor='none')
                rivers_50m = cfeature.NaturalEarthFeature('physical', 'rivers_lake_centerlines', '50m')
                ax.add_feature(states_provinces, edgecolor='gray')
                ax.add_feature(cfeature.BORDERS, linestyle=':')
                ax.add_feature(cfeature.OCEAN)
                ax.add_feature(cfeature.LAND, edgecolor='black')
                ax.add_feature(cfeature.LAKES, edgecolor='black')
                ax.set_title(label_date.strftime(YMD_date_format)+" "+label_date.strftime(H_date_format)+"Z EPA AQS PM25 (ug/m3) Obs")
                for x in range(0,num_pm25):
                  ## ax.plot(pm25lon[x], pm25lat[x], 'o', c=(0.0000,1.0000,1.0000), markersize=3, markerfacecolor='C0', transform=ccrs.PlateCarree())
                  ax.plot(pm25lon[x], pm25lat[x], 'o', c=(0.0000,1.0000,1.0000), markersize=3, transform=ccrs.PlateCarree())
                fileout=figout+"/epaaqs_pm25."+figarea+"."+label_date.strftime(YMD_date_format)+"."+label_date.strftime(H_date_format)+".k1.png"
                plt.savefig(fileout, bbox_inches='tight') 

                if figarea == "ak":
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, false_easting=-58.775, false_northing=48.772, standard_parallels=(57, 63), globe=None)
                elif figarea == "hi":
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, standard_parallels=(19, 21), globe=None)
                else:
                    aqmproj=ccrs.LambertConformal(central_longitude=clon, central_latitude=clat, standard_parallels=(33, 45), globe=None)
                ax = plt.axes(projection=aqmproj)
                ax.set_extent(extent)
                states_provinces = cfeature.NaturalEarthFeature(
                    category='cultural',
                    name='admin_1_states_provinces_lines',
                    scale='50m',
                    facecolor='none')
                rivers_50m = cfeature.NaturalEarthFeature('physical', 'rivers_lake_centerlines', '50m')
                ax.add_feature(states_provinces, edgecolor='gray')
                ax.add_feature(cfeature.BORDERS, linestyle=':')
                ax.add_feature(cfeature.OCEAN)
                ax.add_feature(cfeature.LAND, edgecolor='black')
                ax.add_feature(cfeature.LAKES, edgecolor='black')
                ax.set_title(label_date.strftime(YMD_date_format)+" "+label_date.strftime(H_date_format)+"Z EPA AQS PM10 (ug/m3) Obs")
                for x in range(0,num_pm10):
                  ax.plot(pm10lon[x], pm10lat[x], 'o', c=(0.4310,0.2780,0.7250), markersize=3, transform=ccrs.PlateCarree())
                fileout=figout+"/epaaqs_pm10."+figarea+"."+label_date.strftime(YMD_date_format)+"."+label_date.strftime(H_date_format)+".k1.png"
                plt.savefig(fileout, bbox_inches='tight') 
