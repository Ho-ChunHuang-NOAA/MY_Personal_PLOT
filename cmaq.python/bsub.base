                    transfer_file=os.path.join(os.getcwd(),"trans_cmaq2"+remote+"_"+icnt+".sh")
                    print("Creating transfer file "+transfer_file)
                    if os.path.exists(transfer_file):
                        os.remove(transfer_file)
                    with open(transfer_file, 'a') as sh:
                        root_dir=data_dir+"/"+model+"/"+exp
                        sh.write("#!/bin/bash -l\n")
                        sh.write("#PBS -o "+log_dir+"/"+model+"_"+icnt+"_scp.out\n")
                        sh.write("#PBS -e "+log_dir+"/"+model+"_"+icnt+"_scp.out\n")
                        sh.write("#PBS -l place=shared,select=1:ncpus=1:mem=4500MB\n")
                        sh.write("#PBS -N j"+model+"_"+icnt+"_scp\n")
                        sh.write("#PBS -q dev_transfer\n")
                        sh.write("#PBS -A AQM-DEV\n")
                        sh.write("#PBS -l walltime="+task_cpu+"\n")
                        sh.write("# \n")
                        sh.write("\n")
                        sh.write("##\n")
                        sh.write("##  Provide fix date daily "+model+" data transfer\n")
                        sh.write("##\n")
                        sh.write("set -x\n")
                        sh.write("\n")
                        sh.write("   root_dir="+root_dir+"\n")
                        sh.write("   dir=${root_dir}/"+model+"."+date.strftime(YMD_date_format)+"\n")
                        sh.write("   if [ -d ${dir} ]; then\n")
                        sh.write("      echo \"FIND ${dir}\"\n")
                        sh.write("      scp -pr ${dir}  "+user+"@"+remote+":${root_dir}\n")
                        sh.write("   else\n")
                        sh.write("       echo \"Can not find ${dir}\"\n")
                        sh.write("   fi\n")
                        sh.write("\n")
                        sh.write("exit\n")
                    print("submit "+transfer_file)
                    subprocess.call(["cat "+transfer_file+" | qsub"], shell=True)
